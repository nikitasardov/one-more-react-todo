{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/todo-list.js","components/todo-list/index.js","components/add-item/add-item.js","components/add-item/index.js","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","label","onFiltersChange","type","value","onChange","e","target","placeholder","ItemStatusFilter","this","props","status","onClick","Component","TodoListItem","params","important","onToggleDone","onDeleted","onToggleImportant","classes","title","TodoList","todos","onToggleProp","filters","els","map","item","id","itemProps","el","key","searchMatches","toLowerCase","indexOf","AddItem","state","newItemLabel","onAddItem","preventDefault","setState","onSubmit","App","saveData","localStorage","setItem","JSON","stringify","isFreeID","isFree","todoData","forEach","getFreeID","suggest","length","createTodoItem","addItem","deleteItem","filter","toggleProp","prop","setFilters","appData","parse","getItem","defaultState","doneCount","toDoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b4d1be.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Easy Todo</h1>\n      <div className=\"flex-column\">\n        {/*<div class=\"custom-control custom-switch\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" checked=\"true\" />\n          <label class=\"custom-control-label\" for=\"darkSwitch\">Dark switch</label>\n        </div>*/}\n        {(toDo === 0 && done === 0)\n          ? 'List is empty now'\n          : <span className=\"badge badge-dark\">{toDo} more to do, {done} done</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default AppHeader;","import AppHeader from './app-header';\nimport './app-header.css';\n\nexport default AppHeader;","import React from 'react';\n\nconst SearchPanel = ({label, onFiltersChange}) => {\n\n  return (\n    <input\n      type=\"text\"\n      value={label}\n      onChange={(e) => onFiltersChange('label', e.target.value)}\n      className=\"form-control search-panel\"\n      placeholder=\"Type here to search\" />\n  );\n};\n\nexport default SearchPanel;","import SearchPanel from './search-panel';\nimport './search-panel.css';\n\nexport default SearchPanel;","import React, {Component} from 'react';\n\nexport default class ItemStatusFilter extends Component {\n  render() {\n    const {status, onFiltersChange} = this.props;\n    return (\n      <div className=\"btn-group\">\n        <button type=\"button\"\n                onClick={() => onFiltersChange('status', 'all')}\n                className={`btn btn-outline-primary ${(status === 'all') ? 'active' : ''}`}>\n          All</button>\n        <button type=\"button\"\n                onClick={() => onFiltersChange('status', 'active')}\n                className={`btn btn-outline-primary ${(status === 'active') ? 'active' : ''}`}>\n          Active</button>\n        <button type=\"button\"\n                onClick={() => onFiltersChange('status', 'done')}\n                className={`btn btn-outline-primary ${(status === 'done') ? 'active' : ''}`}>\n          Done</button>\n\n      </div>\n    );\n  }\n}","import ItemStatusFilter from './item-status-filter';\nimport './item-status-filter.css';\n\nexport default ItemStatusFilter;","import React from 'react';\n\nconst TodoListItem = (params) => {\n\n  const {label, done, important, onToggleDone, onDeleted, onToggleImportant} = params;\n\n  let classes = 'todo-list-item text-info';\n  classes += (done) ? ' done' : '';\n  classes += (important) ? ' important' : '';\n\n  return (\n    <span className={classes}>\n      <span\n        className=\"todo-list-item-label\"\n        title={(done) ? '' : 'Mark as done'}\n        onClick={onToggleDone}>\n        {label}\n      </span>\n\n      <button type=\"button\"\n              onClick={onDeleted}\n              title=\"Remove task\"\n              className=\"btn btn-outline-danger btn-sm float-right\">\n        <i className=\"fa fa-trash-o\" />\n      </button>\n\n      <button type=\"button\"\n              onClick={onToggleImportant}\n              title={(important) ? 'Not important' : 'Mark as important'}\n              className=\"btn btn-outline-warning btn-sm float-right\">\n      <i className=\"fa fa-exclamation\" />\n    </button>\n    </span>\n  );\n}\n\nexport default TodoListItem;","import TodoListItem from './todo-list-item';\nimport './todo-list-item.css';\n\nexport default TodoListItem;","import React from 'react';\nimport TodoListItem from '../todo-list-item';\n\nconst TodoList = ({todos, onToggleProp, onDeleted, filters}) => {\n  const els = todos.map((item) => {\n    const {id, ...itemProps} = item;\n    const el = (\n      <li className=\"list-group-item\" key={id}>\n        <TodoListItem\n          {...itemProps}\n          onToggleDone={() => onToggleProp(id, 'done')}\n          onToggleImportant={() => onToggleProp(id, 'important')}\n          onDeleted={() => onDeleted(id)} />\n      </li>\n    );\n\n    const searchMatches = itemProps.label.toLowerCase().indexOf(filters.label) !== -1;\n    \n    switch(true) {\n      case (filters.status === 'all' && searchMatches):\n        return el;\n      case (filters.status === 'active' && !itemProps.done && searchMatches):\n        return el;\n      case (filters.status === 'done' && itemProps.done && searchMatches):\n        return el;\n      default:\n        return '';\n    }\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      {els}\n    </ul>\n  );\n};\n\nexport default TodoList;","import TodoList from './todo-list';\nimport './todo-list.css';\n\nexport default TodoList;","import React, {Component} from 'react';\n\nexport default class AddItem extends Component {\n  state = {\n    newItemLabel: ''\n  };\n\n  onAddItem = (e) => {\n    e.preventDefault();\n    if (!this.state.newItemLabel) return false;\n    \n    this.props.onAddItem(this.state.newItemLabel);\n    this.setState({newItemLabel: ''});\n  }\n\n  render() {\n    let classes = \"btn\";\n    classes += (this.state.newItemLabel)\n      ? ' btn-success'\n      : ' btn-outline-success disabled';\n    return (\n      <form className=\"add-item d-flex\"\n            onSubmit={this.onAddItem}>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          value={this.state.newItemLabel}\n          onChange={(e) => this.setState({newItemLabel: e.target.value})}\n          placeholder=\"Add new task\" />\n        <div className=\"btn-group\">\n          <button type=\"submit\"\n                  className={classes}>Add</button>\n        </div>\n      </form>\n    );\n  };\n}","import AddItem from './add-item';\nimport './add-item.css';\n\nexport default AddItem;","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport TodoList from '../todo-list';\nimport AddItem from '../add-item';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    const appData = JSON.parse(localStorage.getItem('appData'));\n\n    const defaultState = (appData)\n      ? appData\n      : {\n        filters: {\n          label: '',\n          status: 'all'\n        },\n        todoData: [\n          {label: 'Learn React', done: false, important: true, id: 1},\n          {label: 'Build awsome App', done: false, important: false, id: 2},\n          {label: 'Build neural network', done: false, important: true, id: 3},\n          {label: 'Drink Coffee', done: false, important: false, id: 4},\n          {label: 'Take a look at bootstrap', done: false, important: false, id: 5}\n        ]\n      };\n      this.state = defaultState;\n    };\n\n  saveData = () => {\n    return localStorage.setItem('appData', JSON.stringify(this.state));\n  }\n\n  isFreeID = (id) => {\n    let isFree = true;\n    this.state.todoData.forEach((el) => {\n      if (el.id === id) {\n        isFree = false;\n      }\n    });\n    return isFree;\n  }\n\n  getFreeID = () => {\n    let suggest = this.state.todoData.length + 1;\n    while (!this.isFreeID(suggest)) {\n      suggest++;\n    }\n    return suggest;\n  };\n\n  createTodoItem = (label) => {\n    return {\n      label: label,\n      done: false,\n      important: false,\n      id: this.getFreeID()\n    }\n  };\n\n  addItem = (label) => this.setState(\n    ({todoData}) => {\n      return {\n        todoData: [...todoData, this.createTodoItem(label)]\n      };\n    }, this.saveData\n  );\n\n  deleteItem = (id) => this.setState(\n    ({todoData}) => {\n      return {\n        todoData: todoData.filter((item) => {\n          return item.id !== id;\n        })\n      }\n    }, this.saveData\n  );\n\n  toggleProp = (id, prop) => this.setState(\n    ({todoData}) => {\n      return {\n        todoData: todoData.map((item) => {\n          if (item.id === id) {\n            item[prop] = !item[prop];\n          }\n          return item;\n        })\n      };\n    }, this.saveData\n  );\n\n  setFilters = (type, value) => {\n    switch(type) {\n      case 'label':\n        this.setState({\n            filters: {\n              label: value.toLowerCase(),\n              status: this.state.filters.status\n            }\n          }, this.saveData\n        );\n        break;\n\n      case 'status':\n        this.setState({\n            filters: {\n              label: this.state.filters.label,\n              status: value\n            }\n          }, this.saveData\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {filters, todoData} = this.state;\n    const doneCount = todoData.filter((el) => el.done).length;\n    const toDoCount = todoData.length - doneCount;\n    return (\n      <div className=\"app\">\n        <AppHeader done={doneCount} toDo={toDoCount} />\n\n        {(todoData.length)\n          ? <div className=\"top-panel d-flex\">\n              <SearchPanel\n                label={filters.label}\n                onFiltersChange={this.setFilters}/>\n              <ItemStatusFilter\n                status={filters.status}\n                onFiltersChange={this.setFilters}/>\n            </div>\n          : ''}\n\n        <TodoList\n          filters={filters}\n          todos={todoData}\n          onToggleProp={this.toggleProp}\n          onDeleted={this.deleteItem} />\n\n        <AddItem onAddItem={this.addItem} />\n\n      </div>\n    );\n  }\n};","import App from './app';\nimport './app.css';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}